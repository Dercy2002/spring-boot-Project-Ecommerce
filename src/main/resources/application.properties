# =============================
# APPLICATION PROPERTIES - ECOMMERCE
# =============================

# =============================
# CONFIGURATION JPA / HIBERNATE
# =============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true

# =============================
# LOGGING SQL
# =============================
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# =============================
# XAMPP LOCAL MYSQL
# =============================
spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce_db?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# =============================
# DOCKER MYSQL
# =============================
# D\u00e9commente cette section si tu veux utiliser Docker
#spring.datasource.url=jdbc:mysql://db:3330/ecommerce_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=
#spring.jpa.hibernate.ddl-auto=update

# =============================
# CONFIGURATION SERVEUR
# =============================
# Commenter HTTPS pour tester en HTTP
#server.port=8044
#server.ssl.enabled=true
#server.ssl.key-store=classpath:keystore.p12
#server.ssl.key-store-password=62678063
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=ecommerceSSL
server.port=8080

logging.level.com.ecommerce.ecommerce_from.jee=DEBUG
logging.file.name=logs/application.log

management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoint.health.show-details=always

# =============================
# CORS
# =============================
spring.web.cors.allowed-origins=http://localhost:8080,http://localhost:8044,https://localhost:8044
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
spring.web.cors.allowed-headers=*

# =============================
# ENCODAGE HTTP
# =============================
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# =============================
# CONFIGURATION JWT
# =============================
app.jwtSecret=MaCl\u00e9JWTUltraSecr\u00e8te1234567890!@#
app.jwtExpirationMs=86400000

# =============================
# CONFIGURATION MULTIPART
# =============================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# =============================
# CONFIGURATION DES RESSOURCES STATIQUES
# =============================
spring.web.resources.static-locations=classpath:/static/,classpath:/META-INF/resources/,classpath:/resources/,classpath:/public/
image.upload.dir=src/main/resources/static/images

# =============================
# SWAGGER / SPRINGDOC
# =============================
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.packages-to-scan=com.ecommerce.ecommerce_from.jee.controller
springdoc.paths-to-match=/api/v1/**

# =============================
# LOGGING APPLICATION
# =============================
logging.level.com.ecommerce.ecommerce_from.jee=DEBUG
logging.file.name=logs/application.log
server.error.include-message=always
server.error.include-binding-errors=always

# =============================
# VERSION API
# =============================
api.version=/api/v1

# Actuator endpoints for Prometheus
management.endpoints.web.exposure.include=health,metrics,prometheus,info
management.endpoint.prometheus.enabled=true
management.endpoint.metrics.enabled=true

# Micrometer Prometheus
management.metrics.export.prometheus.enabled=true

# Tracing for Grafana (OpenTelemetry)
management.tracing.sampling.probability=1.0
management.otlp.tracing.endpoint=http://otel-collector:4317

# Local only (comment out for Render)
spring.datasource.url=jdbc:mysql://localhost:3312/ecommerce_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=

# Render will override with env vars
spring.jpa.hibernate.ddl-auto=update
server.port=8080  # Render uses $PORT
springdoc.swagger-ui.enabled=true  # For Swagger

